// Generated by Selenium IDE
import database.Database;
import facade.JPAFacade;
import jakarta.servlet.http.HttpSession;
import models.Hike;
import org.junit.Assert;
import org.junit.Test;
import org.junit.Before;
import org.junit.After;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import static org.mockito.ArgumentMatchers.any;
import static org.mockito.Mockito.doNothing;
import static org.mockito.Mockito.mock;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;

import java.io.File;
import java.time.Duration;
import java.util.*;
import java.net.MalformedURLException;
import java.net.URL;
public class AdminEditHikeTest {
  private WebDriver driver;
  private Map<String, Object> vars;
  JavascriptExecutor js;
  @Before
  public void setUp() {
    driver = new ChromeDriver();
    js = (JavascriptExecutor) driver;
    vars = new HashMap<String, Object>();
  }
  @After
  public void tearDown() {
    driver.quit();
  }
  @Test
  public void adminEditHike() {
    //Mocking database and removing functionality from insert
    Database.facade = mock(JPAFacade.class);
    doNothing().when(Database.facade).update(any(Hike.class));

    WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(10)); // 10 seconds timeout

    driver.get("http://localhost:8080/MyHike_war_exploded/");
    driver.manage().window().setSize(new Dimension(1936, 1056));

    /* TODO Remove/Extract Login */
    driver.findElement(By.linkText("Login")).click();
    driver.findElement(By.name("username")).click();
    driver.findElement(By.name("username")).sendKeys("admin");
    driver.findElement(By.name("password")).sendKeys("admin");
    driver.findElement(By.name("password")).sendKeys(Keys.ENTER);
    /* TODO Remove/Extract Login */

    driver.findElement(By.cssSelector(".row:nth-child(2) > .col-sm-4:nth-child(1) .bg-image")).click();
    driver.findElement(By.linkText("Edit")).click();
    driver.findElement(By.cssSelector(".leaflet-marker-icon:nth-child(2)")).click();
    driver.findElement(By.id("map")).click();
    driver.findElement(By.id("map")).click();
    driver.findElement(By.id("name")).click();
    driver.findElement(By.id("name")).clear();
    driver.findElement(By.id("name")).sendKeys("Test Edit");
    driver.findElement(By.id("altitude")).click();
    driver.findElement(By.id("altitude")).clear();
    driver.findElement(By.id("altitude")).sendKeys("50");
    driver.findElement(By.id("distance")).clear();
    driver.findElement(By.id("distance")).sendKeys("2.00");
    driver.findElement(By.id("region")).click();
    {
      WebElement dropdown = driver.findElement(By.id("region"));
      Select regionDropdown = new Select(dropdown);
      regionDropdown.selectByVisibleText("Montafon");
    }
    driver.findElement(By.cssSelector("form")).click();
    driver.findElement(By.id("duration")).click();
    driver.findElement(By.id("duration")).sendKeys("03:00");
    driver.findElement(By.id("June")).click();
    driver.findElement(By.cssSelector(".landscape-rating:nth-child(8) path")).click();
    driver.findElement(By.cssSelector(".strength-rating:nth-child(2) path")).click();
    driver.findElement(By.cssSelector(".stamina-rating:nth-child(10)")).click();
    driver.findElement(By.cssSelector(".difficulty-rating:nth-child(6)")).click();
    driver.findElement(By.cssSelector(".row:nth-child(2)")).click();
    driver.findElement(By.id("description")).clear();
    driver.findElement(By.id("description")).sendKeys("Testing Edit");
    //Link to a fixed image inside of the project
    String fixedFilePath = "src/main/webapp/images/beispiel_berge.jpg";
    driver.findElement(By.id("fileToUpload")).sendKeys(new File(fixedFilePath).getAbsolutePath());
    driver.findElement(By.cssSelector(".btn")).click();

    //Wait until the alert window pops up and check if alert is positive about the hike being successfully edited.
    wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(".alert")));
    String alertMessage = driver.findElement(By.cssSelector(".alert")).getText();
    System.out.println(alertMessage);
    Assert.assertEquals("Successfully edited your hike!", alertMessage);
  }
}
