// Generated by Selenium IDE

import org.junit.After;
import org.junit.Assert;
import org.junit.Before;
import org.junit.Test;
import org.openqa.selenium.*;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedCondition;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.support.ui.WebDriverWait;

import java.io.File;
import java.time.Duration;
import java.util.HashMap;
import java.util.Map;
public class EditHikeTest {
  private WebDriver driver;
  private Map<String, Object> vars;
  JavascriptExecutor js;
  @Before
  public void setUp() {
    driver = new ChromeDriver();
    js = (JavascriptExecutor) driver;
    vars = new HashMap<String, Object>();
  }
  @After
  public void tearDown() {
    driver.quit();
  }
  @Test
  public void adminEditHike() {
    Actions actions = new Actions(driver);

    //TODO Mock database/fix mocking
    //Mocking database and removing functionality from insert
    //Database.facade = mock(JPAFacade.class);
    //doNothing().when(Database.facade).update(any(Hike.class));

    WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(10)); // 10 seconds timeout

    driver.get("http://localhost:8080/MyHike_war_exploded/");
    driver.manage().window().setSize(new Dimension(1936, 1056));

    //Login as admin
    LoginTest loginTest = new LoginTest();
    loginTest.login(driver, wait);

    //Try to edit the first hike showing up on discover page.
    wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(".row:nth-child(2) > .col-sm-4:nth-child(1) .bg-image")));
    driver.findElement(By.cssSelector(".row:nth-child(2) > .col-sm-4:nth-child(1) .bg-image")).click();
    wait.until(ExpectedConditions.presenceOfElementLocated(By.linkText("Edit")));
    driver.findElement(By.linkText("Edit")).click();
    driver.findElement(By.cssSelector(".leaflet-marker-icon:nth-child(2)")).click();
    //Click on 3 different positions in the map (create one start-, way- and endpoint and initiate routing)
    actions.moveToElement(driver.findElement(By.id("map")), 10, 10).click().perform();
    actions.moveToElement(driver.findElement(By.id("map")), 20, 20).click().perform();
    //Wait a maximum of 10 seconds for the dom to be fully loaded.
    wait.until((ExpectedCondition<Boolean>) webDriver ->
            ((JavascriptExecutor) webDriver).executeScript("return document.readyState").equals("complete"));
    driver.findElement(By.id("name")).click();
    driver.findElement(By.id("name")).clear();
    driver.findElement(By.id("name")).sendKeys("Test Edit");
    driver.findElement(By.id("region")).click();
    {
      WebElement dropdown = driver.findElement(By.id("region"));
      Select regionDropdown = new Select(dropdown);
      regionDropdown.selectByVisibleText("Montafon");
    }
    driver.findElement(By.id("June")).click();
    driver.findElement(By.cssSelector(".landscape-rating:nth-child(8) path")).click();
    driver.findElement(By.cssSelector(".strength-rating:nth-child(2) path")).click();
    driver.findElement(By.cssSelector(".stamina-rating:nth-child(10)")).click();
    driver.findElement(By.cssSelector(".difficulty-rating:nth-child(6)")).click();
    driver.findElement(By.cssSelector(".row:nth-child(2)")).click();
    driver.findElement(By.id("description")).clear();
    driver.findElement(By.id("description")).sendKeys("Testing Edit");
    //Link to a fixed image inside of the project
    String fixedFilePath = "src/main/webapp/images/HikeImageTest.jpg";
    driver.findElement(By.id("fileToUpload")).sendKeys(new File(fixedFilePath).getAbsolutePath());
    driver.findElement(By.cssSelector(".btn")).click();

    //Wait until the alert window pops up and check if alert is positive about the hike being successfully edited.
    wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(".alert")));
    String alertMessage = driver.findElement(By.cssSelector(".alert")).getText();
    Assert.assertEquals("Successfully edited your hike!", alertMessage);
  }
}
